---
- name: install basic packages
  become: true
  ansible.builtin.apt:
    force_apt_get: yes
    update_cache: yes
    pkg:
      - python3
      - python3-pip
      - git
      - keepass2
      - nethogs
      - gparted
      - httpie
      - curl
      - zip
      - snap
      - openssh-server
      - jq
      - mpv
      - libssl-dev
      - pavucontrol
      - vim

      - qemu-kvm
      - libvirt-clients 
      - libvirt-daemon-system 
      - bridge-utils
      - cockpit
      - cockpit-machines

- name: install snap non-classic snaps
  community.general.snap:
    name: "{{ item }}"
  loop:
    - multipass
    - brave
    - spotify
  become: true

- name: install snap classic snaps
  community.general.snap:
    name: "{{ item }}"
    classic: yes
  loop:
    - intellij-idea-ultimate
    - pycharm-professional
    - clion
    - datagrip
    - kubectl
    - helm
    - microk8s
  become: true

- name: create workspace directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ script_directory }}"
    - "{{ alias_directory }}"
    - "{{ export_directory }}"
    - "{{ path_env_directory }}"

- name: install plain scripts
  ansible.builtin.copy:
    src: script/
    dest: "{{ script_directory }}"
    mode: 0700

- name: install template scripts
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ script_directory }}"
    mode: 0700
  with_fileglob: ../templates/script/*

- name: create alias directory
  ansible.builtin.file:
    path: "{{ alias_directory }}"
    state: directory

- name: copy alias files
  ansible.builtin.copy:
    src: alias/
    dest: "{{ alias_directory }}"

- name: copy shell extension
  ansible.builtin.template:
    src: shell_extension.sh
    dest: "{{ system_directory }}/shell_extension.sh"

- name: load shell extension to bash
  ansible.builtin.lineinfile:
    line: "source {{ system_directory }}/shell_extension.sh"
    path: ~/.bashrc

- name: check if zsh is installed
  ansible.builtin.stat:
    path: ~/.zshrc
  register: zsh

- name: load shell extension to zsh
  ansible.builtin.lineinfile:
    line: "source {{ system_directory }}/shell_extension.sh"
    path: ~/.zshrc
  when: zsh.stat.exists

- name: setup global git config user name
  community.general.git_config:
    name: user.name
    value: ibacangan
    scope: global

- name: setup global git config user email
  community.general.git_config:
    name: user.email
    value: i.bacangan@gmail.com
    scope: global

- name: install hashicorp apt key
  ansible.builtin.apt_key:
    url: https://apt.releases.hashicorp.com/gpg
  become: true

- name: install hashicorp apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_facts.lsb.codename }} main"
  become: true

- name: install terraform
  ansible.builtin.apt:
    pkg: terraform
    state: latest
    update_cache: yes
  become: true

- name: install helm repositories
  kubernetes.core.helm_repository:
    name: "{{ item.key }}"
    repo_url: "{{ item.value }}"
  loop: "{{ list | dict2items }}"
  vars:
    list:
      openebs: https://openebs.github.io/charts
      grafana: https://grafana.github.io/helm-charts
      prometheus-community: https://prometheus-community.github.io/helm-charts
      metallb: https://metallb.github.io/metallb
      cert-manager: https://charts.jetstack.io
      sealed-secrets: https://bitnami-labs.github.io/sealed-secrets
      argo: https://argoproj.github.io/argo-helm
      dex: https://charts.dexidp.io
      ingress-nginx: https://kubernetes.github.io/ingress-nginx
      kubernetes-replicator: https://helm.mittwald.de
      minio: https://charts.min.io/
      minio-op: https://operator.min.io/

- name: install rust
  ansible.builtin.shell:
    cmd: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

- name: install cargo apps
  ansible.builtin.shell:
    cmd: "cargo install {{item}}"
  loop:
    - cargo-update
    - cargo-watch
    - cargo-audit
    - ripgrep
